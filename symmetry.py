"""Reference symmetry operations for a given point group."""
import numpy as np

a = np.sqrt(3) / 2

SYM_OPS = {
    '6/mmm': [
        np.array([
            [1, 0, 0],
            [0, 1, 0],
            [0, 0, 1],
        ]),
        np.array([
            [-0.5, a, 0],
            [-a, -0.5, 0],
            [0, 0, 1],
        ]),
        np.array([
            [-0.5, -a, 0],
            [a, -0.5, 0],
            [0, 0, 1],
        ]),
        np.array([
            [0.5, a, 0],
            [-a, 0.5, 0],
            [0, 0, 1],
        ]),
        np.array([
            [-1, 0, 0],
            [0, -1, 0],
            [0, 0, 1],
        ]),
        np.array([
            [0.5, -a, 0],
            [a, 0.5, 0],
            [0, 0, 1],
        ]),
        np.array([
            [-0.5, -a, 0],
            [-a, 0.5, 0],
            [0, 0, -1],
        ]),
        np.array([
            [1, 0, 0],
            [0, -1, 0],
            [0, 0, -1],
        ]),
        np.array([
            [-0.5, a, 0],
            [a, 0.5, 0],
            [0, 0, -1],
        ]),
        np.array([
            [0.5, a, 0],
            [a, -0.5, 0],
            [0, 0, -1],
        ]),
        np.array([
            [-1, 0, 0],
            [0, 1, 0],
            [0, 0, -1],
        ]),
        np.array([
            [0.5, -a, 0],
            [-a, -0.5, 0],
            [0, 0, -1],
        ]),
    ],
    'cubic': [
        np.array([
            [1, 0, 0],
            [0, 1, 0],
            [0, 0, 1],
        ]),
        np.array([
            [0, 0, 1],
            [1, 0, 0],
            [0, 1, 0],
        ]),
        np.array([
            [0, 1, 0],
            [0, 0, 1],
            [1, 0, 0],
        ]),
        np.array([
            [0, -1, 0],
            [0, 0, 1],
            [-1, 0, 0],
        ]),
        np.array([
            [0, -1, 0],
            [0, 0, -1],
            [1, 0, 0],
        ]),
        np.array([
            [0, 1, 0],
            [0, 0, -1],
            [-1, 0, 0],
        ]),
        np.array([
            [0, 0, -1],
            [1, 0, 0],
            [0, -1, 0],
        ]),
        np.array([
            [0, 0, -1],
            [-1, 0, 0],
            [0, 1, 0],
        ]),
        np.array([
            [0, 0, 1],
            [-1, 0, 0],
            [0, 1, 0],
        ]),
        np.array([
            [-1, 0, 0],
            [0, 1, 0],
            [0, 0, -1],
        ]),
        np.array([
            [-1, 0, 0],
            [0, -1, 0],
            [0, 0, 1],
        ]),
        np.array([
            [1, 0, 0],
            [0, -1, 0],
            [0, 0, -1],
        ]),
        np.array([
            [0, 0, -1],
            [0, -1, 0],
            [-1, 0, 0],
        ]),
        np.array([
            [0, 0, 1],
            [0, -1, 0],
            [1, 0, 0],
        ]),
        np.array([
            [0, 0, 1],
            [0, 1, 0],
            [-1, 0, 0],
        ]),
        np.array([
            [0, 0, -1],
            [0, 1, 0],
            [1, 0, 0],
        ]),
        np.array([
            [-1, 0, 0],
            [0, 0, -1],
            [0, -1, 0],
        ]),
        np.array([
            [1, 0, 0],
            [0, 0, -1],
            [0, 1, 0],
        ]),
        np.array([
            [1, 0, 0],
            [0, 0, 1],
            [0, -1, 0],
        ]),
        np.array([
            [-1, 0, 0],
            [0, 0, 1],
            [0, 1, 0],
        ]),
        np.array([
            [0, -1, 0],
            [-1, 0, 0],
            [0, 0, -1],
        ]),
        np.array([
            [0, 1, 0],
            [-1, 0, 0],
            [0, 0, 1],
        ]),
        np.array([
            [0, 1, 0],
            [1, 0, 0],
            [0, 0, -1],
        ]),
        np.array([
            [0, -1, 0],
            [1, 0, 0],
            [0, 0, 1],
        ]),
    ],
    'triclinic': [
        np.eye(3),
    ]
}
